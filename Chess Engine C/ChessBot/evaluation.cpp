#include "evaluation.h"

const int16_t evaluation::middle_game_king_table[BOARD_SIZE][BOARD_SIZE] =
{
	{  40,  50,  30,  20,  20,  30,  50,  40 },
	{  20,  20,  10,  10,  10,  10,  20,  20 },
	{ -20, -20, -30, -30, -30, -30, -20, -20 },
	{ -30, -30, -40, -40, -40, -40, -30, -30 },
	{ -50, -50, -50, -50, -50, -50, -50, -50 },
	{ -50, -50, -50, -50, -50, -50, -50, -50 },
	{ -50, -50, -50, -50, -50, -50, -50, -50 },
	{ -50, -50, -50, -50, -50, -50, -50, -50 }
};

const int16_t evaluation::end_game_king_table[BOARD_SIZE][BOARD_SIZE] =
{
	{ -50, -40, -30, -30, -30, -30, -40, -50 },
	{ -40, -30, -20, -20, -20, -20, -30, -40 },
	{ -30, -20,  10,  30,  30,  10, -20, -30 },
	{ -30, -20,  30,  50,  50,  30, -20, -30 },
	{ -30, -20,  30,  50,  50,  30, -20, -30 },
	{ -30, -20,  10,  30,  30,  10, -20, -30 },
	{ -40, -30, -20, -20, -20, -20, -30, -40 },
	{ -50, -40, -30, -30, -30, -30, -40, -50 }
};

const int16_t evaluation::middle_game_queen_table[BOARD_SIZE][BOARD_SIZE] =
{
	{ -30, -20, -20, -10, -10, -20, -20, -30 },
	{ -20,   0,  20,  20,  20,  20,   0, -20 },
	{ -20,  20,  30,  30,  30,  30,  20, -20 },
	{ -10,  20,  30,  30,  30,  30,  20, -10 },
	{ -10,  20,  30,  30,  30,  30,  20, -10 },
	{ -20,  20,  30,  30,  30,  30,  20, -20 },
	{ -20,   0,  10,  10,  10,  10,   0, -20 },
	{ -30, -20, -20, -10, -10, -20, -20, -30 }
};

const int16_t evaluation::end_game_queen_table[BOARD_SIZE][BOARD_SIZE] =
{
	{ -30, -10,   0,  10,  10,   0, -10, -30 },
	{ -10,   0,  10,  20,  20,  10,   0, -10 },
	{   0,  10,  30,  30,  30,  30,  10,   0 },
	{  10,  20,  30,  30,  30,  30,  20,  10 },
	{  10,  20,  30,  30,  30,  30,  20,  10 },
	{   0,  10,  30,  30,  30,  30,  10,   0 },
	{ -10,   0,  10,  20,  20,  10,   0, -10 },
	{ -30, -10,   0,  10,  10,   0, -10, -30 }
};

const int16_t evaluation::middle_game_bishop_table[BOARD_SIZE][BOARD_SIZE] =
{
	{ -20, -10, -10,  -5,  -5, -10, -10, -20 },
	{ -10,   0,  10,  10,  10,  10,   0, -10 },
	{ -10,  10,  20,  20,  20,  20,  10, -10 },
	{  -5,   5,  20,  20,  20,  20,   5,  -5 },
	{  -5,  10,  10,  20,  20,  10,  10,  -5 },
	{ -10,   5,  10,  20,  20,  10,   5, -10 },
	{ -10,   0,   0,   0,   0,   0,   0, -10 },
	{ -20, -10, -10,  -5,  -5, -10, -10, -20 }
};

const int16_t evaluation::end_game_bishop_table[BOARD_SIZE][BOARD_SIZE] =
{
	{ -20, -15, -10,  -5,  -5, -10, -15, -20 },
	{ -15, -10,   0,  10,  10,   0, -10, -15 },
	{ -10,   0,  20,  20,  20,  20,   0, -10 },
	{  -5,  10,  20,  20,  20,  20,  10,  -5 },
	{  -5,  10,  20,  20,  20,  20,  10,  -5 },
	{ -10,   0,  20,  20,  20,  20,   0, -10 },
	{ -15, -10,   0,  10,  10,   0, -10, -15 },
	{ -20, -15, -10,  -5,  -5, -10, -15, -20 }
};

const int16_t evaluation::middle_game_knight_table[BOARD_SIZE][BOARD_SIZE] =
{
	{ -20, -15, -10, -10, -10, -10, -15, -20 },
	{ -15, -10,  -5,   0,   0,  -5, -10, -15 },
	{ -10,  -5,   5,  10,  10,   5,  -5, -10 },
	{ -10,   0,  10,  15,  15,  10,   0, -10 },
	{ -10,  10,  15,  20,  20,  15,  10, -10 },
	{ -10,   5,  10,  15,  15,  10,   5, -10 },
	{ -15, -10,   5,  10,  10,   5, -10, -15 },
	{ -20, -15, -10, -10, -10, -10, -15, -20 }
};

const int16_t evaluation::end_game_knight_table[BOARD_SIZE][BOARD_SIZE] =
{
	{ -20, -15, -10, -10, -10, -10, -15, -20 },
	{ -15, -10,   0,   5,   5,   0, -10, -15 },
	{ -10,   0,  10,  15,  15,  10,   0, -10 },
	{ -10,   5,  15,  20,  20,  15,   5, -10 },
	{ -10,   5,  15,  20,  20,  15,   5, -10 },
	{ -10,   0,  10,  15,  15,  10,   0, -10 },
	{ -15, -10,   0,   5,   5,   0, -10, -15 },
	{ -20, -15, -10, -10, -10, -10, -15, -20 }
};

const int16_t evaluation::middle_game_rook_table[BOARD_SIZE][BOARD_SIZE] =
{
	{  10,   0,  10,  20,  20,  10,   0,  10 },
	{   0,   0,   0,   0,   0,   0,   0,   0 },
	{  -5,  -5, -10, -10, -10, -10,  -5,  -5 },
	{ -10, -10, -15, -20, -20, -15, -10, -10 },
	{ -10, -10, -15, -20, -20, -15, -10, -10 },
	{  -5,  -5, -10, -10, -10, -10,  -5,  -5 },
	{   0,   0,   5,  10,  10,   5,   0,   0 },
	{   5,   5,  10,  20,  20,  10,   5,   5 }
};

const int16_t evaluation::end_game_rook_table[BOARD_SIZE][BOARD_SIZE] =
{
	{ -20, -10,   0,   5,   5,   0, -10, -20 },
	{ -10,   0,   5,  10,  10,   5,   0, -10 },
	{   0,   5,  10,  15,  15,  10,   5,   0 },
	{   5,  10,  15,  20,  20,  15,  10,   5 },
	{   5,  10,  15,  20,  20,  15,  10,   5 },
	{   0,   5,  10,  15,  15,  10,   5,   0 },
	{ -10,   0,   5,  10,  10,   5,   0, -10 },
	{ -20, -10,   0,   5,   5,   0, -10, -20 }
};

const int16_t evaluation::middle_game_pawn_table[BOARD_SIZE][BOARD_SIZE] =
{
	{   0,   0,   0,   0,   0,   0,   0,   0 },
	{  20,  20,  20, -20, -20,  20,  20,  20 },
	{  10,  10,  10,  10,  10,  10,  10,  10 },
	{  15,  15,  15,  15,  15,  15,  15,  15 },
	{  10,  10,  10,  10,  10,  10,  10,  10 },
	{   5,   5,   5,   5,   5,   5,   5,   5 },
	{   0,   0,   0,   0,   0,   0,   0,   0 },
	{   0,   0,   0,   0,   0,   0,   0,   0 }
};

const int16_t evaluation::end_game_pawn_table[BOARD_SIZE][BOARD_SIZE] =
{
	{   0,   0,   0,   0,   0,   0,   0,   0 },
	{ -50, -50, -50, -50, -50, -50, -50, -50 },
	{ -30, -30, -30, -30, -30, -30, -30, -30 },
	{   0,   0,   0,   0,   0,   0,   0,   0 },
	{  50,  50,  50,  50,  50,  50,  50,  50 },
	{ 125, 125, 125, 125, 125, 125, 125, 125 },
	{ 250, 250, 250, 250, 250, 250, 250, 250 },
	{   0,   0,   0,   0,   0,   0,   0,   0 }
};

const int16_t* evaluation::middle_game_tables[7] =
{
	nullptr,
	(const int16_t*)evaluation::middle_game_king_table,
	(const int16_t*)evaluation::middle_game_queen_table,
	(const int16_t*)evaluation::middle_game_bishop_table,
	(const int16_t*)evaluation::middle_game_knight_table,
	(const int16_t*)evaluation::middle_game_rook_table,
	(const int16_t*)evaluation::middle_game_pawn_table
};

const int16_t* evaluation::end_game_tables[7] =
{
	nullptr,
	(const int16_t*)evaluation::end_game_king_table,
	(const int16_t*)evaluation::end_game_queen_table,
	(const int16_t*)evaluation::end_game_bishop_table,
	(const int16_t*)evaluation::end_game_knight_table,
	(const int16_t*)evaluation::end_game_rook_table,
	(const int16_t*)evaluation::end_game_pawn_table
};

const int16_t evaluation::game_phase_score_table[7] = { 0, 0, 4, 1, 1, 2, 0 };

const int16_t evaluation::men_score_table[7] = { 0, 0, 900, 330, 320, 500, 100 };

const int16_t evaluation::check = 50;

const int16_t evaluation::mate = 20000;